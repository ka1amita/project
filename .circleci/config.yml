version: 2.1

orbs:
  gradle: circleci/gradle@3.0.0

executors:
  java1_8:
    docker:
      - image: cimg/openjdk:8.0

jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:8.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    # Specify the working directory for the created docker container
    # - all (relative) paths below will be relative to this directory
    working_directory: ~/project-fox-dining/backend

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout:
          path: ~/project-fox-dining

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: gradle build -x test -x checkstyleMain -x checkstyleTest

workflows:
  checkout-build-test:

    jobs:
      - build
      - gradle/test:
          # executor: java1_8
          app_src_directory: ~/project/backend/
          test_results_path: ~/project/backend/build/test-results
          reports_path: ~/project/backend/build/reports
          cache_key: v1-dependencies-{{ checksum "backend/build.gradle"}}
          parameters:
            tag: 9
          

          

          